{"version":3,"sources":["roooute.js"],"names":["angular","module","RooouteBuilder","this","routes","service","prototype","buildRoute","route","model","replaceComponent","hasOwnProperty","arguments","encodeURIComponent","replace","HttpRouteInterceptor","rooouteBuilder","request","config","url","routeParams","factory","$inject"],"mappings":"CAAA,WACA,YAEAA,SAAAC,OAAA,iBAGA,WACA,YAKA,SAAAC,KACAC,KAAAC,UAJAJ,QAAAC,OAAA,WACAI,QAAA,iBAAAH,GAMAA,EAAAI,UAAAC,WAAA,SAAAC,EAAAC,GACA,GAAAC,GAAA,WACA,IAAAD,EAAAE,eAAAC,UAAA,IACA,KAAA,qDAAAA,UAAA,GAAA,GACA,OAAA,IAAAC,mBAAAJ,EAAAG,UAAA,KAEA,OAAAJ,GAAAM,QAAA,eAAAJ,OAIA,WACA,YAKA,SAAAK,GAAAC,GACA,OACAC,QAAA,SAAAC,GAEA,MADAA,GAAAC,IAAAH,EAAAT,WAAAW,EAAAC,IAAAD,EAAAE,aACAF,IAPAlB,QAAAC,OAAA,WACAoB,QAAA,qBAAAN,GAUAA,EAAAO,SAAA","file":"roooute.min.js","sourcesContent":["(function () {\r\n    'use strict';\r\n\r\n    angular.module('roooute', []);\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('roooute')\r\n        .service('rooouteBuilder', RooouteBuilder);\r\n\r\n    function RooouteBuilder() {\r\n        this.routes = {};\r\n    }\r\n\r\n    RooouteBuilder.prototype.buildRoute = function (route, model) {\r\n        var replaceComponent = function () {\r\n            if (!model.hasOwnProperty(arguments[1]))\r\n                throw \"Could not find replacement for route componenet ':\" + arguments[1] + \"'\";\r\n            return '/' + encodeURIComponent(model[arguments[1]]);\r\n        };\r\n        return route.replace(/\\/:([^\\/]+)/g, replaceComponent);\r\n    };\r\n\r\n})();\n(function () {\r\n    'use strict';\r\n\r\n    angular.module('roooute')\r\n        .factory('rooouteInterceptor', HttpRouteInterceptor);\r\n\r\n    function HttpRouteInterceptor(rooouteBuilder) {\r\n        return {\r\n            request: function (config) {\r\n                config.url = rooouteBuilder.buildRoute(config.url, config.routeParams);\r\n                return config;\r\n            }\r\n        };\r\n    }\r\n    HttpRouteInterceptor.$inject = [\"rooouteBuilder\"];\r\n\r\n})();"],"sourceRoot":"/source/"}